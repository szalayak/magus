enum Locale {
	en
	hu
}

type Description {
	locale: Locale!
	title: String!
	description: String
}

type Die @model @auth(rules: [ { allow: private}])
 {
	id: ID!
	descriptions: [Description!]!
	minValue: Int!
	maxValue: Int!
}

type Damage {
	numberOfDice: Int!
  	dieId: ID!
	die: Die!
	modifier: Int!
}

type CombatValues {
	initiation: Int!
	offence: Int!
	defence: Int!
	aiming: Int!
}

type MainClass @model @auth(rules: [ { allow: private}])
 {
	id: ID!
	descriptions: [Description!]!
}

type Class @model @auth(rules: [ { allow: private}]) @key(name:"classesByMainClass",fields:["mainClassId"],queryField:"classesByMainClass") 
{
	id: ID!
	mainClassId: ID!
	mainClass: MainClass! @connection(fields:["mainClassId"])
	descriptions: [Description!]!
}

type Personality @model @auth(rules: [ { allow: private}])
 {
	id: ID!
	descriptions: [Description!]!
}

type Mastery @model @auth(rules: [ { allow: private}])
 {
	id: ID!
	descriptions: [Description!]!
}

type Race @model @auth(rules: [ { allow: private}])
 {
	id: ID!
	descriptions: [Description!]!
}

type PsiSchool @model @auth(rules: [ { allow: private}])
{
	id: ID!
	descriptions: [Description!]!
	basePsiPoints: Int!
	psiPointsPerLevel: Int!
}

type SpellCategory @model @auth(rules: [ { allow: private}])
{
	id: ID!
	descriptions: [Description!]!
} 

type SpellClass @model @auth(rules: [ { allow: private}]) @key(name:"spellClassesByCategory",fields:["spellCategoryId"],queryField:"spellClassesByCategory")
{
	id: ID!
	spellCategoryId: ID!
	SpellCategory: SpellCategory! @connection(fields:["spellCategoryId"])
	descriptions: [Description!]!
}

type Armour @model @auth(rules: [ { allow: private}])
{
	id: ID!
	descriptions: [Description!]!
	weight: String
	movementPreventionValue: Int!
	damageReductionValue: Int!
	price: Int!
} 

type Shield  @model @auth(rules: [ { allow: private}])
{
	id: ID!
	descriptions: [Description!]!
	combatValues: CombatValues!
	damage: Damage!
	weight: String
}